#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define KEYS_LEFT 0 1 2 3 4 5 6 \
                  14 15 16 17 18 19 20 \
                  28 29 30 31 32 33 34 \
                  46 47 48 49 50 51 \
                  66 67 68 69 70
#define KEYS_RIGHT 7 8 9 10 11 12 13 \
                   21 22 23 24 25 26 27 \
                   39 40 41 42 43 44 45 \
                   60 61 62 63 64 65 \
                   77 78 79 80 81
#define THUMBS_LEFT 35 36 54 71 72 73
#define THUMBS_RIGHT 37 38 57 74 75 76
/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <400>;
            key-positions = <66 41>;
            bindings = <&to 1>;
        };
    };
};

/ { 
    behaviors {
      #include "macros.dtsi"
      #define AS(keycode) &as LS(keycode) keycode

      hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
      };
      as: auto_shift {
        compatible = "zmk,behavior-hold-tap";
        label = "AUTO_SHIFT";
        #binding-cells = <2>;
        tapping_term_ms = <400>;
        quick_tap_ms = <0>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
      };
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp  ESC    AS(N1)    AS(N2)   AS(N3)   AS(N4)    AS(N5) &mo 2                                                                                  &mo 3    AS(N6) AS(N7) AS(N8)    AS(N9)   AS(N0)   AS(EQUAL)
        &kp  TAB    AS(Q)     AS(W)    AS(E)    AS(R)     AS(T)  &none                                                                                  &kp UP   AS(Y)  AS(U)  AS(I)     AS(O)    AS(P)    AS(MINUS)
        &kp  CAPS   AS(A)     AS(S)    AS(D)    AS(F)     AS(G)  &kp LA(LEFT)            &kp LSHIFT &kp LALT &none &none &kp RALT &kp RSHIFT            &kp DOWN AS(H)  AS(J)  AS(K)     AS(L)    AS(SEMI) AS(BSLH)
        &sk  LSHIFT AS(Z)     AS(X)    AS(C)    AS(V)     AS(B)                &none     &none      &kp DEL  &none &none &kp HOME &none      &none               AS(N)  AS(M)  AS(COMMA) AS(DOT)  AS(FSLH) AS(SQT)
        &mo  1      AS(GRAVE) &kp LGUI &kp LEFT &kp RIGHT                      &kp ENTER &kp LCTRL  &kp BSPC             &kp END  &kp RCTRL  &kp SPACE                  &kp UP &kp DOWN  &kp BSPC &kp DEL  &mo 1
      >;
    };
    keypad {
      bindings = <
        &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2     &trans            &trans      &none                                                                  &trans &trans        &trans   &trans   &td_lb    &td_rb    &macro_eq
        &trans      &trans       &trans       &trans           &kp RS(RC(R))     &trans      &none                                                                  &none  &trans        &kp HOME &kp UP   &kp END   &kp PSCRN &trans
        &trans      &trans       &trans       &trans           &trans            &macro_au   &none         &trans &trans &none &none &trans &trans                  &none  &trans        &kp LEFT &kp DOWN &kp RIGHT &trans    &trans
        &trans      &trans       &kp LA(F4)   &macro_cl        &trans            &bl BL_TOG         &none  &none  &trans &none &none &kp LS(LC(HOME)) &none  &none         &kp RS(RC(N)) &trans   &trans   &trans    &trans    &trans
        &trans      &trans       &trans       &kp RS(RC(LEFT)) &kp RS(RC(RIGHT))                    &trans &trans &trans             &kp LS(LC(END))  &trans &trans                      &trans   &trans   &trans    &trans    &trans
      >;
    };
    fn {
      bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &trans                                                       &trans &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
        &trans &trans &trans &trans &trans &trans &none                                                        &none  &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans &none         &trans &trans &none &none &trans &trans        &none  &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans        &none  &none  &trans &none &none &trans &none  &none         &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans               &trans &trans &trans             &trans &trans &trans               &trans &trans &trans  &trans  &trans
      >;
    };
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                                                          &trans                 &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
        &none &none        &none        &none        &none        &none        &bootloader                                                                                                    &bootloader            &none        &none        &none        &none        &none        &none
        &none &none        &none        &none        &none        &none        &rgb_ug RGB_MEFS_CMD 5                 &bt BT_CLR &bt BT_CLR &none &none &bt BT_CLR &bt BT_CLR                 &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none        &none        &none
        &none &none        &none        &none        &none        &none                               &none           &none      &none      &none &none &none      &none      &none                                  &none        &none        &none        &none        &none        &none
        &none &none        &none        &bl BL_INC   &bl BL_DEC                                       &rgb_ug RGB_TOG &bl BL_TOG &none                  &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none        &none        &none
      >;
    };
  };
};
